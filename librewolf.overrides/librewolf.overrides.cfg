// reynard - librewolf.overrides.cfg file

// Purely Personal Preferences
pref("browser.urlbar.scotchBonnet.enableOverride", false);
pref("browser.compactmode.show", true);
pref("toolkit.legacyUserProfileCustomizations.stylesheets", true);
pref("widget.non-native-theme.scrollbar.style", 3);
pref("middlemouse.paste", false);
pref("general.autoScroll", true);
pref("mousewheel.with_control.action", 1);
pref("browser.urlbar.suggest.engines", false);
pref("browser.tabs.closeWindowWithLastTab", false);
pref("browser.urlbar.showSearchTerms.enabled", false);
pref("browser.urlbar.maxRichResults", 1);
pref("dom.webnotifications.enabled", false);
pref("media.videocontrols.picture-in-picture.enable-when-switching-tabs.enabled", false);
pref("mousewheel.default.delta_multiplier_y", 90);
pref("mousewheel.default.delta_multiplier_z", 90);
pref("mousewheel.default.delta_multiplier_x", 90);
pref("browser.tabs.tabMinWidth", 125);

// NOTE: DO NOT uncomment or change these settings, It will mess everything up, and you will spend hours troubleshooting & wondering why librewolf keeps changing your search engine to duckduckgo, when you've set it to kagi manually using both the GUI *and* the pref, causing you so much annoyance and grief that you consider switching browsers entirely, because surely brave doesn't have these issues, right? Long story short, just don't edit these preferences, they don't do anything anyways.
// pref("browser.policies.runOncePerModification.setDefaultSearchEngine", "kagi-rules");
// pref("browser.search.defaultenginename", "google-sucks");

// Privacy/security increasing prefs (may cause breakage)
pref("geo.provider.network.url", " "); // disables geolocation services
pref("privacy.fingerprintingProtection", true); // there is never any reason to disable this
pref("xpinstall.signatures.required", true); // set this to false when developing extensions 
pref("network.cookie.cookieBehavior", 5); // set this to 1 for more privacy, and breakage
pref("network.cookie.sameSite.schemeful", true);
pref("network.cookie.cookieBehavior.trackerCookieBlocking", true);
pref("network.http.referer.XOriginTrimmingPolicy", 2); 
pref("network.http.speculative-parallel-limit", 0);
pref("network.proxy.failover_direct", false);
pref("privacy.userContext.enabled", true);
pref("cookiebanners.service.mode", 1); // tries to reject cookie notices, may break some things, but unlikely
pref("browser.cache.disk.enable", false); // will use more RAM, and sites may load slower initially
pref("dom.security.https_only_mode", true); // should be default already, but just enforce encase it isn't set 
pref("dom.security.https_only_mode_send_http_background_request", false);
pref("dom.webgpu.enabled", false); // massive fingerprinting vector, not really used quite yet, maybe in the future
pref("dom.webgpu.service-workers.enabled", false); // webgpu optimization, enable/disable this with the main webgpu pref
pref("privacy.query_stripping.strip_list", "__hsfp __hssc __hstc __s _hsenc _openstat dclid fbclid gbraid gclid hsCtaTracking igshid mc_eid ml_subscriber ml_subscriber_hash msclkid oft_c oft_ck oft_d oft_id oft_ids oft_k oft_lk oft_sk oly_anon_id oly_enc_id rb_clickid s_cid twclid vero_conv vero_id wbraid wickedid yclid ceneo_spo cmpid crid dclid Echobox fbclid feature gclid gs_l hsCtaTracking kw mkt_tok ml_subscriber ml_subscriber_hash msclkid oly_anon_id oly_enc_id os_ehash pp rb_clickid si spm srsltid s_cid tracking_source twclid vero_conv vero_id wickedid wtrid yclid _ga _gl _hsenc _openstat __hsfp __hssc __hstc __s __twitter_impression fbclid gclid ICID igshid link_id mcID rb_clickid ref track_click utm_source ia ffab"); // pref to strip trackers from URLs, might break some websites. Concatenated to firefox's remote list, so is always up-to-date

// Privacy/security reducing prefs (for site compatibility)
pref("privacy.resistFingerprinting", false); // set to true for more privacy, breaks stuff
pref("privacy.resistFingerprinting.pbmode", false); // set to true if you want, causes minor issues in normal browsing
pref("network.http.referer.XOriginPolicy", 0); // set to 2 for more privacy, causes breakage (example: lenovo website)
pref("webgl.disabled", false); // set to true if you care about fingerprinting
pref("privacy.fingerprintingProtection.overrides", "-CSSPrefersColorScheme,-FrameRate,-JSDateTimeUTC,-RoundWindowSize"); // technically not useful unless you add +AllTargets to this list

// Disable browser AI stuff
pref("browser.ml.chat.menu", false);
pref("browser.ml.enable", false);
pref("browser.ml.chat.enabled", false);
pref("browser.ml.chat.sidebar", false);
pref("browser.ml.chat.page", false);
pref("browser.ml.chat.page.footerBadge", false);
pref("browser.ml.chat.page.menuBadge", false);
pref("browser.ml.checkForMemory", false);
pref("browser.ml.linkPreview.enabled", false);
pref("browser.ml.modelHubRootUrl", " ");
pref("browser.ml.linkPreview.shift", false);
pref("browser.ml.chat.shortcuts.custom", false);
pref("browser.ml.chat.shortcuts", false);

// Linux, Wayland, & GTK specific prefs (Should be distro agnostic, works on Fedora & SteamOS)
pref("gfx.webrender.compositor", true);
pref("gfx.webrender.quality.force-subpixel-aa-where-possible", true); // might decrease performance at quality cost
pref("gfx.webrender.all", true); 
pref("layers.gpu-process.enabled", true);
pref("widget.gtk.native-context-menus", false);
pref("widget.gtk.hide-pointer-while-typing.enabled", false);
pref("middlemouse.contentLoadURL", false);
pref("browser.tabs.searchclipboardfor.middleclick", false);
pref("geo.provider.use_geoclue", false);
pref("dom.push.enabled", false);
pref("media.ffmpeg.vaapi.enabled", true);
pref("widget.gtk.non-native-titlebar-buttons.enabled", true);
pref("widget.use-xdg-desktop-portal.file-picker", 1);
pref("widget.use-xdg-desktop-portal.mime-handler", 1);
pref("apz.gtk.pangesture.enabled", true);
pref("apz.gtk.touchpad.swipe.enabled", true);

// Prefs for general speed
pref("browser.preferences.defaultPerformanceSettings.enabled", false);
pref("dom.ipc.processPrelaunch.delayMs", 500);
pref("content.notify.interval", 130000);
pref("network.buffer.cache.count", 64);
pref("network.buffer.cache.size", 65535);
pref("network.http.max-connections", 1200);
pref("browser.tabs.remote.separatePrivilegedMozillaWebContentProcess", true);
pref("javascript.options.mem.gc_incremental", true);
pref("javascript.options.mem.gc_compacting", true);
pref("browser.cache.memory.capacity", -1);
pref("media.memory_cache_max_size", -1);
pref("media.memory_caches_combined_limit_kb", -1);

// Framework 13 Performance Overrides (128gb RAM [16gb VRAM, 112gb RAM], 12c/24t CPU) 
pref("layout.frame_rate", 120);
pref("dom.ipc.processCount", 14); // set to physical core count +/- 2
pref("dom.ipc.processCount.webIsolated", 14); // set to physical core count +/- 2
pref("dom.ipc.processCount.privilegedabout", 2); // set to 2 on more powerful systems, 1 by default 
pref("javascript.options.mem.gc_allocation_threshold_mb", 35);
pref("image.mem.decode_bytes_at_a_time", 65536);
pref("browser.cache.memory.max_entry_size", 51200);
pref("media.memory_caches_combined_limit_pc_sysmem", 15);
pref("browser.low_commit_space_threshold_percent", 7);
pref("browser.sessionhistory.max_total_viewers", 8);
pref("browser.tabs.min_inactive_duration_before_unload", 900000);

// SteamDeck OLED Overrides (16gb RAM, 4c/8t CPU, SteamOS Linux) 
/*
pref("dom.ipc.processCount", 4);
pref("dom.ipc.processCount.webIsolated", 4);
pref("dom.ipc.processCount.privilegedabout", 1);
pref("image.mem.decode_bytes_at_a_time", 32768);
pref("media.memory_caches_combined_limit_pc_sysmem", 30);
pref("browser.low_commit_space_threshold_percent", 20);
pref("browser.tabs.tabMinWidth", 75);
pref("layout.frame_rate", 90);
pref("mousewheel.default.delta_multiplier_y", 50);
pref("mousewheel.default.delta_multiplier_z", 50);
pref("mousewheel.default.delta_multiplier_x", 50);
pref("browser.tabs.min_inactive_duration_before_unload", 150000);
*/

// M3 MacBook Air Overrides (24gb RAM, 8c/8t CPU, macOS)
/*
pref("dom.ipc.processCount", 8);
pref("dom.ipc.processCount.webIsolated", 8);
pref("dom.ipc.processCount.privilegedabout", 2);
pref("media.memory_caches_combined_limit_pc_sysmem", 20);
pref("browser.low_commit_space_threshold_percent", 15);
pref("gfx.webrender.all", false);
pref("layout.frame_rate", 60);
pref("media.ffmpeg.vaapi.enabled", false);
pref("mousewheel.default.delta_multiplier_y", 160);
pref("mousewheel.default.delta_multiplier_z", 160);
pref("mousewheel.default.delta_multiplier_x", 160);
pref("browser.tabs.min_inactive_duration_before_unload", 300000);
*/

// Smoothfox stuff
pref("apz.overscroll.enabled", true);
pref("general.smoothScroll", true);
pref("general.smoothScroll.msdPhysics.continuousMotionMaxDeltaMS", 12);
pref("general.smoothScroll.msdPhysics.enabled", true);
pref("general.smoothScroll.msdPhysics.motionBeginSpringConstant", 600);
pref("general.smoothScroll.msdPhysics.regularSpringConstant", 650);
pref("general.smoothScroll.msdPhysics.slowdownMinDeltaMS", 25);
pref("general.smoothScroll.msdPhysics.slowdownMinDeltaRatio", "2");
pref("general.smoothScroll.msdPhysics.slowdownSpringConstant", 250);
pref("general.smoothScroll.currentVelocityWeighting", "1");
pref("general.smoothScroll.stopDecelerationWeighting", "1");

// Peskyfox stuff
pref("browser.privatebrowsing.vpnpromourl", "");
pref("extensions.getAddons.showPane", false);
pref("extensions.htmlaboutaddons.recommendations.enabled", false);
pref("browser.discovery.enabled", false);
pref("browser.shell.checkDefaultBrowser", false);
pref("browser.newtabpage.activity-stream.asrouter.userprefs.cfr.addons", false);
pref("browser.newtabpage.activity-stream.asrouter.userprefs.cfr.features", false);
pref("browser.preferences.moreFromMozilla", false);
pref("browser.aboutConfig.showWarning", false);
pref("browser.aboutwelcome.enabled", false);
pref("layout.css.prefers-color-scheme.content-override", 0);
pref("cookiebanners.service.enableGlobalRules", true);
pref("cookiebanners.service.enableGlobalRules.subFrames", true);
pref("browser.translations.autoTranslate", true);
pref("browser.translations.enable", true);
pref("full-screen-api.transition-duration.enter", "0 0");
pref("full-screen-api.transition-duration.leave", "0 0");
pref("full-screen-api.warning.timeout", 0);
pref("full-screen-api.warning.delay", -1);
pref("browser.urlbar.unitConversion.enabled", true);
pref("browser.urlbar.suggest.calculator", true);
pref("browser.urlbar.trending.featureGate", false);
pref("browser.urlbar.recentsearches.featureGate", false);
pref("dom.text_fragments.create_text_fragment.enabled", true);
pref("media.autoplay.default", 1);
pref("media.block-autoplay-until-in-foreground", true);
pref("browser.startup.page", 1);
pref("browser.newtabpage.activity-stream.showSponsoredTopSites", false);
pref("browser.newtabpage.activity-stream.feeds.section.topstories", false);
pref("browser.newtabpage.activity-stream.showSponsored", false);
pref("browser.newtabpage.activity-stream.default.sites", "");
pref("browser.newtabpage.activity-stream.logowordmark.alwaysVisible", false);
pref("browser.toolbars.bookmarks.visibility", "never");
pref("extensions.pocket.enabled", false);
pref("browser.download.folderList", 1);
pref("browser.download.always_ask_before_handling_new_types", false);
pref("browser.download.useDownloadDir", false);
pref("browser.download.autohideButton", true);
pref("browser.download.manager.addToRecentDocs", false);
pref("browser.menu.showViewImageInfo", true);
pref("layout.word_select.eat_space_to_next_word", false);
pref("browser.tabs.hoverPreview.enabled", true);
pref("permissions.default.shortcuts", 0);
pref("layout.spellcheckDefault", 2);

// Fastfox stuff
pref("gfx.webrender.precache-shaders", true);
pref("gfx.canvas.accelerated.cache-size", 512);
pref("gfx.content.skia-font-cache-size", 20);
pref("media.cache_resume_threshold", 3600);
pref("media.cache_readahead_limit", 7200);
pref("network.http.max-persistent-connections-per-server", 10);
pref("network.http.max-urgent-start-excessive-connections-per-host", 5);
pref("network.http.max-persistent-connections-per-proxy", 48);
pref("network.http.pacing.requests.enabled", false);
pref("network.ssl_tokens_cache_capacity", 10240);
pref("network.dns.disablePrefetch", true);
pref("network.dns.disablePrefetchFromHTTPS", true);
pref("browser.places.speculativeConnect.enabled", false);
pref("network.predictor.enabled", false);
pref("browser.tabs.unloadOnLowMemory", true);
pref("fission.webContentIsolationStrategy", 1);
pref("network.dnsCacheExpiration", 3600);

// Securefox stuff
pref("privacy.query_stripping.strip_on_share.enabled", true);
